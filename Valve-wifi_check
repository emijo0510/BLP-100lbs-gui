
import tkinter as tk
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from tkinter import filedialog, messagebox
from matplotlib.figure import Figure
import pandas as pd
import os
from pycode import Wifi_Host, Telemetry, System_Health
from pycode import PT1,PT2,PT3,PT4,PT5,FS,TS,RR

class GUI:
    # Create Window
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("BLP GUI")
        self.window.geometry('1000x1000')
        self.window.columnconfigure(0, weight=1)
        self.window.columnconfigure(1, weight=1)
        self.window.columnconfigure(2, weight=1)
        self.window.columnconfigure(3, weight=1)
        self.window.columnconfigure(4, weight=1)


        self.valve_status = {'FV-01': 0, 'FV-02': 0, 'FV-03': 0, 'OV-03': 0}

        # Configure layout for uniform button sizes
        for i in range(5):
            self.window.columnconfigure(i, weight=1, uniform="col")

        self.test_files = {}
        self.widgets()

    # Add widgets
    def widgets(self):
        # Title
        self.title = tk.Label(self.window,
                              text="BLP GUI",
                              font=("Times New Roman", 25),
                              background="light pink",
                              foreground="black")
        self.title.grid(row=0, columnspan=5, sticky="nsew")

        # File Input
        self.fileinput = tk.StringVar()
        self.fileinput_entry = tk.Button(self.window,
                                         text="Upload File",
                                         foreground="black",
                                         font=("Times New Roman", 20),
                                         command=self.browse_button)
        self.fileinput_entry.grid(row=1, column=0, sticky="nsew", padx=5, pady=5)

        # FV01 Check Button
        self.FV01_button = tk.Button(self.window,
                                     text="FV-01",
                                     foreground="black",
                                     font=("Times New Roman", 20),
                                     command=lambda: self.toggle_valve(1))
        self.FV01_button.grid(row=2, column=0, sticky="ew")

        # FV02 Check Button
        self.FV02_button = tk.Button(self.window,  # Renamed button
                                     text="FV-02",
                                     foreground="black",
                                     font=("Times New Roman", 20),
                                     command=lambda: self.toggle_valve(2))
        self.FV02_button.grid(row=2, column=1, sticky="ew")

        # FV03 Check Button
        self.FV03_button = tk.Button(self.window,
                                     text="FV-03",
                                     foreground="black",
                                     font=("Times New Roman", 20),
                                     command=lambda: self.toggle_valve(3))
        self.FV03_button.grid(row=2, column=2, sticky="ew")

        # OV03 Check Button
        self.OV03_button = tk.Button(self.window,
                                     text="OV-03",
                                     foreground="black",
                                     font=("Times New Roman", 20),
                                     command=lambda: self.toggle_valve(4))
        self.OV03_button.grid(row=2, column=3, sticky="ew")

        # Start Button
        self.start_button = tk.Button(self.window,
                                      text="START",
                                      background="green",
                                      foreground="black",
                                      font=("Times New Roman", 20),
                                      command=self.start)
        self.start_button.grid(row=1, column=1, sticky="nsew", padx=5, pady=5)

        # Abort Button
        self.abort_button = tk.Button(self.window,
                                      text="ABORT",
                                      background="red",
                                      foreground="black",
                                      font=("Times New Roman", 20),
                                      command=self.abort)
        self.abort_button.grid(row=1, column=2, sticky="nsew", padx=5, pady=5)

        # Graphs Banner---------------------------------------------------------------------
        self.banner_label = tk.Label(self.window,
                                     text="Graphs",
                                     font=("Times New Roman", 20),
                                     background="light pink",
                                     foreground="black")
        self.banner_label.grid(row=4, column=0, columnspan=5, sticky="nsew", padx=5, pady=5)

        # Temperature Label
        self.temp_label = tk.Label(self.window,
                                   text="Temperature",
                                   background="white",
                                   foreground="black",
                                   font=("Times New Roman", 20), )
        self.temp_label.grid(row=5, column=0, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=6, column=0, columnspan=2, sticky="nsew", padx=5, pady=5)
        # Thrust Label
        self.thrust_label = tk.Label(self.window,
                                     text="Thrust",
                                     background="white",
                                     foreground="black",
                                     font=("Times New Roman", 20), )
        self.thrust_label.grid(row=5, column=2, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=6, column=2, columnspan=2, sticky="nsew", padx=5, pady=5)
        # Pressure Transducer 1 Label
        self.PT1_label = tk.Label(self.window,
                                  text="Pressure Transducer 1",
                                  background="white",
                                  foreground="black",
                                  font=("Times New Roman", 20), )
        self.PT1_label.grid(row=5, column=4, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=6, column=4, columnspan=2, sticky="nsew", padx=5, pady=5)
        # Pressure Transducer 2 Label
        self.PT2_label = tk.Label(self.window,
                                  text="Pressure Transducer 2",
                                  background="white",
                                  foreground="black",
                                  font=("Times New Roman", 20), )
        self.PT2_label.grid(row=7, column=0, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=8, column=0, columnspan=2, sticky="nsew", padx=5, pady=5)
        # Pressure Transducer 3 Label
        self.PT3_label = tk.Label(self.window,
                                  text="Pressure Transducer 3",
                                  background="white",
                                  foreground="black",
                                  font=("Times New Roman", 20), )
        self.PT3_label.grid(row=7, column=2, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=8, column=2, columnspan=2, sticky="nsew", padx=5, pady=5)

        # Pressure Transducer 4 Label
        self.PT4_label = tk.Label(self.window,
                                  text="Pressure Transducer 4",
                                  background="white",
                                  foreground="black",
                                  font=("Times New Roman", 20), )
        self.PT4_label.grid(row=7, column=4, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=8, column=4, columnspan=2, sticky="nsew", padx=5, pady=5)

        # Pressure Transducer 5 Label
        self.PT5_label = tk.Label(self.window,
                                  text="Pressure Transducer 5",
                                  background="white",
                                  foreground="black",
                                  font=("Times New Roman", 20), )
        self.PT5_label.grid(row=11, column=0, sticky="nsew", padx=5, pady=5)

        self.chart_canvas = tk.Canvas(self.window,
                                      background="white",
                                      height=125)
        self.chart_canvas.grid(row=12, column=0, columnspan=2, sticky="nsew", padx=5, pady=5)

    # Function Commands-------------------------------------------------------------------------------------------
    def check_wifi(self):
        pass

    # Upload File
    def browse_button(self):
        filename = filedialog.askopenfilename()
        if filename:  # Check if a file is selected
            print(f"Selected file: {filename}")
        try:
            df = pd.read_excel(filename)
        except Exception as e:
            print(f"Error loading file: {e}")

    # Start button
    def start(self):
        self.start_button.config(background="green")  # Brighter green when clicked
        self.abort_button.config(background="light coral")  # Light red remains

    # Abort button
    def abort(self):
        self.abort_button.config(background="red")  # Brighter red when clicked
        self.start_button.config(background="light green")  # Light green remains

    # Toggle Valves

    def toggle_valve(self, num):
        # 0 = closed , 1 = open
        tel.get_data()
        if num == 1 and self.valve_status['FV-01'] == 0:
            tel.open_valve(1)
            tel.send_data()
            self.FV01_button.config(bg="green")
            self.valve_status['FV-01'] = 1
            print("FV-01 opened")
        elif num == 2 and self.valve_status['FV-02'] == 0:
            tel.open_valve(2)
            tel.send_data()
            self.FV02_button.config(bg="green")
            self.valve_status['FV-02'] = 1
            print("FV-02 opened")
        elif num == 3 and self.valve_status['FV-03'] == 0:
            tel.open_valve(3)
            tel.send_data()
            self.FV03_button.config(bg="green")
            self.valve_status['FV-03'] = 1
            print("FV-03 opened")
        elif num == 4 and self.valve_status['OV-03'] == 0:
            tel.open_valve(4)
            tel.send_data()
            self.OV03_button.config(bg="green")
            self.valve_status['OV-03'] = 1
            print("OV-03 opened")
        elif num == 1 and self.valve_status['FV-01'] == 1:
            tel.close_valve(1)
            tel.send_data()
            self.FV01_button.config(bg="red")
            self.valve_status['FV-01'] = 0
            print("FV-01 closed")
        elif num == 2 and self.valve_status['FV-02'] == 1:
            tel.close_valve(2)
            tel.send_data()
            self.FV02_button.config(bg="red")
            self.valve_status['FV-02'] = 0
            print("FV-02 closed")
        elif num == 3 and self.valve_status['FV-03'] == 1:
            tel.close_valve(3)
            tel.send_data()
            self.FV03_button.config(bg="red")
            self.valve_status['FV-03'] = 0
            print("FV-03 closed")
        elif num == 4 and self.valve_status['OV-03'] == 1:
            tel.close_valve(4)
            tel.send_data()
            self.OV03_button.config(bg="red")
            self.valve_status['OV-03'] = 0
            print("OV-03 closed")


    # Create Plots
    def create_plot(self, title, row, column):
        """Create and embed a matplotlib plot with x and y axes"""
        fig = Figure(figsize=(5, 2), dpi=100)
        ax = fig.add_subplot(111)
        ax.set_title(title)
        ax.set_xlabel("Time (s)")
        ax.set_ylabel("Value")
        ax.grid(True)

        canvas = FigureCanvasTkAgg(fig, master=self.window)
        canvas_widget = canvas.get_tk_widget()
        canvas_widget.grid(row=row, column=column, columnspan=3, sticky="nsew", padx=5, pady=5)
        canvas.draw()

if __name__ == "__main__":
    window = GUI()
    #wifi = Wifi_Host()
    #sys = System_Health()
    #tel = Telemetry(wifi,sys)
    window.window.mainloop()





